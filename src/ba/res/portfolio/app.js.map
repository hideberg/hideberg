{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src/scripts/angular/app.angular.js",
    "src/scripts/angular/configs/config-angular-routes.js",
    "src/scripts/angular/configs/config-angular.js",
    "src/scripts/angular/configs/config-formly.js",
    "src/scripts/angular/configs/routes-middlewares.js",
    "src/scripts/angular/ctrls/app-common-ctrls.js",
    "src/scripts/angular/ctrls/connect-ctrls.js",
    "src/scripts/angular/ctrls/profile-ctrls.js",
    "src/scripts/angular/ctrls/service-ctrls.js",
    "src/scripts/app.js"
  ],
  "names": [],
  "mappings": "AAAA;;;ACEA,IAAI,mBAAmB,QAAQ,0BAAR,EAAoC,SAA3D;AACA,IAAI,kBAAkB,QAAQ,yBAAR,EAAmC,SAAzD;;AAEA,IAAI,qBAAqB,QAAQ,0BAAR,EAAoC,SAA7D;AACA,IAAI,yBAAyB,QAAQ,uBAAR,EAAiC,SAA9D;AACA,IAAI,yBAAyB,QAAQ,uBAAR,EAAiC,SAA9D;AACA,IAAI,yBAAyB,QAAQ,uBAAR,EAAiC,SAA9D;;;;AAIA,IAAI,MAAM,QAAQ,MAAR,CAAe,KAAf,EAAsB,CAAC,YAAD,EAAe,WAAf,EAA4B,QAA5B,EAAsC,iBAAtC,EAAyD,cAAzD,EAAyE,YAAzE,CAAtB,CAAV;;AAEA,iBAAiB,GAAjB,E;AACA,gBAAgB,GAAhB,E;;AAEA,mBAAmB,GAAnB,E;AACA,uBAAuB,GAAvB,E;AACA,uBAAuB,GAAvB,E;AACA,uBAAuB,GAAvB,E;;AAEA,IAAI,OAAJ,CAAY,OAAZ,EAAqB,MAAI,CAAE,CAA3B,E;;;;ACrBA,IAAI,cAAc,QAAQ,sBAAR,EAAgC,WAAlD;;AAEA,QAAQ,mBAAR,GAA8B,CAAC,cAAD,EAAiB,kBAAjB,KAAwC;AAClE,uBAAmB,SAAnB,CAA6B,OAA7B;;AAIA,mBAAe,KAAf,CAAqB,cAArB,EAAqC;AACjC,aAAK,cAD4B;AAEjC,qBAAa,2BAFoB;AAGjC,gBAAO;AACJ,mBAAM;AADF;AAH0B,KAArC;;AAQA,mBAAe,KAAf,CAAqB,UAArB,EAAiC;AAC7B,aAAK,WADwB;AAE7B,qBAAa,2BAFgB;AAG7B,iBAAS,YAAY,MAAZ,CAAmB,YAAY,MAA/B;AAHoB,KAAjC;;AAOA,mBAAe,KAAf,CAAqB,SAArB,EAAgC;AAC5B,aAAK,UADuB;AAE5B,qBAAa,sBAFe;AAG5B,iBAAS,YAAY,MAAZ,CAAmB,YAAY,gBAA/B;AAHmB,KAAhC;;AAQA,mBAAe,KAAf,CAAqB,SAArB,EAAgC;AAC5B,aAAK,UADuB;AAE5B,qBAAa,sBAFe;AAG5B,iBAAS,YAAY,MAAZ,CAAmB,YAAY,MAA/B;AAHmB,KAAhC;;AAQA,mBAAe,KAAf,CAAqB,eAArB,EAAsC;AAClC,aAAK,aAD6B;AAElC,qBAAa,4BAFqB;AAGlC,iBAAS,YAAY,MAAZ,CAAmB,YAAY,MAA/B;AAHyB,KAAtC;;AAMA,mBAAe,KAAf,CAAqB,MAArB,EAA6B;AACzB,aAAK,OADoB;AAEzB,qBAAa,mBAFY;AAGzB,iBAAS,YAAY,MAAZ,CAAmB,YAAY,OAA/B;AAHgB,KAA7B;;AAMH,CAhDD;;;;ACFA,IAAI,qBAAqB,QAAQ,yBAAR,EAAmC,mBAA5D;;AAEA,QAAQ,SAAR,GAAqB,GAAD,IAAS;AACzB,QAAI,MAAJ,CAAW,kBAAX;AACH,CAFD;;;;AAMA,IAAI,cAAc,CAAC,QAAD,EAAW,OAAX,EAAoB,cAApB,EAAoC,UAApC,EAAgD,QAAhD,EAA0D,YAA1D,CAAlB;AACA,QAAQ,gBAAR,GAA4B,OAAD,IAAa;AACpC,QAAI,MAAM,EAAE,KAAF,CAAQ,WAAR,CAAV;AACA,QAAI,IAAJ,CAAS,OAAT;AACA,WAAO,GAAP;AACH,CAJD;;;ACVA,QAAQ,SAAR,GAAqB,GAAD,IAAS;AACzB,QAAI,MAAJ,CAAW,MAAX;AACA,QAAI,GAAJ,CAAQ,GAAR;AACH,CAHD;AAIA,IAAI,MAAM,CAAC,YAAD,EAAe,wBAAf,KAA4C;AAClD,iBAAa,MAAb,CAAoB,kCAApB,GAAyD,IAAzD;AACA,6BAAyB,gBAAzB,CAA0C,WAA1C,EAAuD,gCAAvD;AACA,6BAAyB,QAAzB,CAAkC,OAAlC,GAA4C,UAAU,SAAV,EAAqB,UAArB,EAAiC,KAAjC,EAAwC;AAChF,eAAO,YAAY,aAAnB;AACH,KAFD;AAGA,6BAAyB,6BAAzB,CAAuD,WAAvD,EAAoE,WAApE,EAAiF,EAAjF,EAAqF,uBAArF,EAA8G,WAA9G;AACH,CAPD;AAQA,IAAI,SAAU,oBAAD,IAA0B;;AAGnC,yBAAqB,OAArB,CAA6B,CACzB;AACI,cAAM,OADV;AAEI,qBAAa,qBAFjB;AAGI,qBAAY;AAHhB,KADyB,EAMzB;AACI,cAAM,UADV;AAEI,qBAAa,wBAFjB;AAGI,qBAAY;AAHhB,KANyB,CAA7B;AAYA,yBAAqB,UAArB,CAAgC,CAC5B;AACI,kBAAU,CACN,iDADM,EAEN,+EAFM,EAGN,qHAHM,EAIN,yCAJM,EAKN,yBALM,EAMN,0DANM,EAON,2CAPM,EAQN,mDARM,EASN,4FATM,EAUN,oFAVM,EAWN,QAXM,EAYN,QAZM,EAaN,QAbM,EAcR,IAdQ,CAcH,GAdG;AADd,KAD4B,EAkB5B;AACI,kBAAU,CACN,0EADM,EAEN,wBAFM,EAGN,yCAHM,EAIN,UAJM,EAKN,QALM,EAMR,IANQ,CAMH,GANG,CADd;AAQI,eAAO;AARX,KAlB4B,CAAhC;AA8BH,CA7CD;;;ACZA,IAAI,cAAc;AACd,YAAQ,CAAC,gCAAD,EAAmC,eAAnC,CADM;AAEd,sBAAkB,CAAC,0BAAD,CAFJ;AAGd,aAAS,CAAC,eAAD,CAHK;AAId,8BAA0B,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB,KAA8B;AACpD,YAAI,OAAO,KAAP,CAAa,IAAb,CAAkB,OAAlB,MAA+B,OAAO,KAAP,CAAa,IAAb,CAAkB,OAAlB,GAA4B,aAA5B,EAAnC,EAAgF;AAC5E,mBAAO,KAAP,CAAa,OAAb,CAAqB,OAArB,GAA+B,IAA/B,CAAoC,MAAM;AACtC,yBAAS,MAAM;AACX,2BAAO,EAAP,CAAU,SAAV;AACH,iBAFD;AAGH,aAJD;AAKH;AACJ,KAZa;AAad,mBAAe,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB,KAA8B;AACzC,eAAO,KAAP,CAAa,OAAb,CAAqB,OAArB,GAA+B,IAA/B,CAAoC,MAAM;AACtC,mBAAO,KAAP,CAAa,IAAb,CAAkB,MAAlB,GAA2B,MAA3B,CAAkC,MAAM;;AAEvC,aAFD;AAGH,SAJD;AAMH,KApBa;AAqBd,oCAAgC,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB,KAA8B;AAC1D,eAAO,KAAP,CAAa,OAAb,CAAqB,OAArB,GAA+B,IAA/B,CAAoC,MAAM;AACtC,qBAAS,YAAY;AACjB,uBAAO,EAAP,CAAU,SAAV,EAAqB,EAAE,gBAAgB,IAAlB,EAArB;AACH,aAFD;AAGH,SAJD;AAKH,KA3Ba;AA4Bd,YAAS,gBAAD,IAAsB;AAC1B,YAAI,aAAa,CAAC,MAAD,EAAS,QAAT,EAAmB,KAAnB,KAA6B;AAC1C,6BAAiB,OAAjB,CAA0B,CAAD,IAAO;AAC5B,4BAAY,CAAZ,EAAe,MAAf,EAAuB,QAAvB,EAAiC,KAAjC;AACH,aAFD;AAGH,SAJD;AAKA,eAAO,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,EAAgC,UAAhC,CAAP;AACH;AAnCa,CAAlB;AAqCA,QAAQ,WAAR,GAAsB,WAAtB;;;;ACpCA,IAAI,SAAS,QAAQ,2BAAR,EAAqC,gBAAlD;AACA,QAAQ,SAAR,GAAqB,GAAD,IAAS;AACzB,QAAI,UAAJ,CAAe,MAAf,EAAuB,OAAO,IAAP,CAAvB;AACH,CAFD;;AAIA,IAAI,OACF,UAAS,MAAT,EAAiB,KAAjB,EAAwB,YAAxB,EAAsC,QAAtC,EAAgD,MAAhD,EAAwD,UAAxD,EAAmE;;AACjE,QAAI,OAAO,UAAX;;AAEA,SAAK,IAAL,GAAY,CAAC,IAAD,EAAO,MAAP,KAAkB;;AAE1B,eAAO,EAAP,CAAU,IAAV,EAAgB,MAAhB;AACH,KAHD;;AAKA,SAAK,YAAL,GAAoB,MAAM;AACtB,eAAO,MAAM,IAAN,CAAW,OAAX,MAAwB,MAAM,IAAN,CAAW,OAAX,GAAqB,aAArB,EAA/B;AACH,KAFD;;AAIA,SAAK,KAAL,GAAa;AACT,gBAAQ,KADC;AAET,iBAAS,EAFA;AAGT,iBAAS;AAHA,KAAb;;AAMA,SAAK,WAAL,GAAmB,CAAC,YAAD,EAAe,GAAf,EAAoB,OAApB,EAA6B,OAA7B,KAAyC;AACxD,aAAK,KAAL,CAAW,YAAX,IAA2B,GAA3B;AACA,YAAG,YAAY,SAAZ,IAAyB,YAAY,SAAxC,EAAmD;AACnD,YAAG,UAAU,GAAb,EAAkB,UAAU,GAAV;AAClB,iBAAS,MAAM;AAAE,iBAAK,MAAL;AAAgB,SAAjC;AACA,iBAAS,MAAM;AACX,sBAAW,WAAW,SAAZ,GAAyB,KAAK,KAAL,CAAW,YAAX,CAAzB,GAAoD,OAA9D;AACA,iBAAK,KAAL,CAAW,YAAX,IAA2B,OAA3B;AACA,iBAAK,MAAL;AACH,SAJD,EAIG,OAJH;AAKH,KAVD;;AAYA,SAAK,SAAL,GAAiB,MAAM;AACnB,eAAO,OAAO,OAAP,CAAe,IAAtB;AACH,KAFD;;AAKA,SAAK,QAAL,GAAiB,GAAD,IAAS;AACrB,eAAO,OAAO,OAAP,CAAe,GAAf,CAAP;AACH,KAFD;;AAIA,SAAK,WAAL,GAAmB,MAAI;AACrB,eAAO,MAAM,IAAN,CAAW,OAAX,EAAP;AACD,KAFD;AAIH,CA5CD;;;;;ACJA,IAAI,SAAS,QAAQ,2BAAR,EAAqC,gBAAlD;AACA,QAAQ,SAAR,GAAmB,GAAD,IAAO;AACrB,QAAI,UAAJ,CAAe,SAAf,EAA0B,OAAO,OAAP,CAA1B;AACH,CAFD;AAGA,IAAI,UACA,UAAS,MAAT,EAAiB,KAAjB,EAAwB,YAAxB,EAAsC,QAAtC,EAAgD,MAAhD,EAAwD,UAAxD,EAAmE;;AACnE,QAAI,OAAO,UAAX;AACA,QAAI,KAAK,IAAT;AACA,OAAG,KAAH,GAAW,EAAX;AACA,OAAG,MAAH,GAAY,CACR;AACI,aAAK,OADT;AAEI,cAAM,OAFV;AAGI,yBAAiB;AACb,mBAAO,OADM;AAEb,yBAAa,OAFA;AAGb,sBAAU,IAHG;AAIb,kBAAM;AAJO;AAHrB,KADQ,EAWR;AACI,aAAK,MADT;AAEI,cAAM,OAFV;AAGI,yBAAiB;AACb,mBAAO,UADM;AAEb,yBAAa,UAFA;AAGb,sBAAU,IAHG;AAIb,kBAAK;AAJQ;AAHrB,KAXQ,CAAZ;;AAuBA,OAAG,UAAH,GAAc,MAAI;AACd,cAAM,IAAN,CAAW,MAAX,GAAoB,IAApB,CAAyB,YAAU;AAC/B,iBAAK,IAAL,CAAU,MAAV;AACH,SAFD;AAGH,KAJD;;AAMA,WAAO,OAAP,GAAiB,MAAM;;AAEnB,cAAM,IAAN,CAAW,KAAX,CAAiB,GAAG,KAAH,CAAS,KAA1B,EAAiC,GAAG,KAAH,CAAS,IAA1C,EAAgD,IAAhD,CAAqD,YAAY;AAC7D,mBAAO,EAAP,CAAU,SAAV,EAAqB,EAArB;AACH,SAFD,EAEG,IAFH,CAEQ,UAAU,CAAV,EAAa;AACjB,mBAAO,OAAP,GAAiB,EAAE,OAAnB;AACA,oBAAQ,IAAR,CAAa,OAAb,EAAsB,CAAtB;AACA,qBAAS,MAAM,OAAO,MAAP,EAAf;AACH,SAND;AAOH,KATD;;AAWA,WAAO,UAAP,GAAoB,MAAM;AACtB,cAAM,IAAN,CAAW,MAAX,CAAkB,GAAG,KAAH,CAAS,KAA3B,EAAkC,GAAG,KAAH,CAAS,IAA3C,EAAiD,IAAjD,CAAsD,UAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB;AACrE,oBAAQ,IAAR,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB;AACH,SAFD,EAEG,IAFH,CAEQ,UAAU,CAAV,EAAa;AACjB,mBAAO,OAAP,GAAiB,EAAE,OAAnB;AACA,oBAAQ,IAAR,CAAa,OAAb,EAAsB,CAAtB;AACA,qBAAS,MAAM,OAAO,MAAP,EAAf;AACH,SAND;AAOH,KARD;;AAUA,aAAS,MAAM,OAAO,MAAP,EAAf,EAA+B,IAA/B;AAEH,CAzDD;;;;;ACJA,IAAI,SAAS,QAAQ,2BAAR,EAAqC,gBAAlD;;AAEA,QAAQ,SAAR,GAAqB,GAAD,IAAS;AACzB,QAAI,UAAJ,CAAe,gBAAf,EAAiC,OAAO,OAAP,CAAjC;AACA,QAAI,UAAJ,CAAe,gBAAf,EAAiC,OAAO,OAAP,CAAjC;AACA,QAAI,UAAJ,CAAe,iBAAf,EAAkC,OAAO,QAAP,CAAlC;AACH,CAJD;;AAOA,IAAI,WACA,UAAU,MAAV,EAAkB,KAAlB,EAAyB,YAAzB,EAAuC,QAAvC,EAAiD,MAAjD,EAAyD,UAAzD,EAAqE;;AACjE,QAAI,IAAI,IAAR;AACA,MAAE,MAAF,GAAW,CAAX;AACA,MAAE,QAAF,GAAa,CACT;AACI,qBAAa;AADjB,KADS,EAIT;AACI,qBAAa;AADjB,KAJS,CAAb;;;AAUA,QAAI,UAAU,CAAC,aAAD,EAAgB,OAAhB,CAAd;AACA,UAAM,KAAN,CAAY,SAAZ,EACK,OADL,CACa,OADb,EACsB,MAAM,IAAN,CAAW,OAAX,EADtB,EAEK,MAFL,CAEY,OAFZ,EAGK,IAHL,GAGY,IAHZ,CAGiB,UAAU,CAAV,EAAa;AACtB,UAAE,QAAF,GAAa,MAAM,IAAN,CAAW,CAAX,EAAc,OAAd,CAAb;AACA,iBAAS,MAAM,OAAO,MAAP,EAAf;AACH,KANL;;AAQA,MAAE,MAAF,GAAY,KAAD,IAAW;AAClB,YAAI,MAAM,QAAN,OAAqB,IAAzB,EAA+B;AAC3B,cAAE,MAAF;AACH,SAFD,MAEO,IAAI,MAAM,QAAN,OAAqB,IAAzB,EAA+B;AAClC,cAAE,MAAF;AACH,SAFM,MAEA;AACH,cAAE,MAAF,GAAW,KAAX;AACH;AACJ,KARD;AASH,CAhCL;;AAmCA,IAAI,UACA,UAAU,MAAV,EAAkB,KAAlB,EAAyB,YAAzB,EAAuC,QAAvC,EAAiD,MAAjD,EAAyD,UAAzD,EAAqE;;;AAEjE,QAAI,IAAI,IAAR;AACA,MAAE,IAAF,GAAS,MAAM,IAAN,CAAW,OAAX,EAAT;AACA,MAAE,KAAF,GAAU,MAAM,IAAN,CAAW,CAAC,EAAE,IAAH,CAAX,EAAqB,CAAC,MAAD,CAArB,EAA+B,CAA/B,CAAV;;AAEA,QAAI,SAAS,YAAY,YAAY;AACjC,YAAI,OAAO,MAAM,IAAN,CAAW,CAAC,EAAE,IAAH,CAAX,EAAqB,CAAC,MAAD,CAArB,EAA+B,CAA/B,CAAX;;;;AAKA,YAAI,EAAE,cAAF,CAAiB,CAAC,IAAD,CAAjB,EAAyB,CAAC,EAAE,KAAH,CAAzB,EAAoC,EAAE,OAAtC,EAA+C,MAA/C,KAA0D,CAA9D,EAAiE;AAC7D,uBAAW,WAAX,CAAuB,QAAvB,EAAiC,UAAjC,EAA6C,EAA7C,EAAiD,IAAjD;AACA,qBAAS,MAAM,OAAO,MAAP,EAAf;AACA,kBAAM,QAAN,CAAe,MAAf,EAAuB,EAAE,KAAzB,EAAgC,EAAE,IAAlC,EAAwC,IAAxC,GAA+C,IAA/C,CAAoD,YAAY;AAC5D,yBAAS,MAAM;AACX,+BAAW,WAAX,CAAuB,QAAvB,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,CAAzC;AACA,2BAAO,MAAP;AACH,iBAHD,EAGG,GAHH;AAIH,aALD;AAMH;AACJ,KAhBY,EAgBV,IAhBU,CAAb;AAiBA,WAAO,GAAP,CAAW,UAAX,EAAuB,MAAM;AAAE,sBAAc,MAAd;AAAwB,KAAvD;AACH,CAzBL;;AA4BA,IAAI,UACA,UAAU,MAAV,EAAkB,KAAlB,EAAyB,YAAzB,EAAuC,QAAvC,EAAiD,MAAjD,EAAyD,UAAzD,EAAqE;;AACjE,QAAI,OAAO,UAAX;AACA,QAAI,KAAK,IAAT;AACA,OAAG,KAAH,GAAW,EAAX;AACA,OAAG,MAAH,GAAY,CACR;AACI,aAAK,WADT;AAEI,cAAM,OAFV;AAGI,yBAAiB;AACb,mBAAO,YADM;AAEb,kBAAM,MAFO;AAGb,sBAAU;AAHG;AAHrB,KADQ,EAUR;AACI,aAAK,UADT;AAEI,cAAM,OAFV;AAGI,yBAAiB;AACb,mBAAO,WADM;AAEb,kBAAM,MAFO;AAGb,sBAAU;AAHG;AAHrB,KAVQ,EAmBR;AACI,kBAAU;AADd,KAnBQ,EAsBR;AACI,aAAK,OADT;AAEI,cAAM,OAFV;AAGI,yBAAiB;AACb,mBAAO,OADM;AAEb,kBAAM,OAFO;AAGb,sBAAU,IAHG;AAIb,yBAAa;AAJA;AAHrB,KAtBQ,EAgCR;AACI,aAAK,UADT;AAEI,cAAM,OAFV;AAGI,yBAAiB;AACb,mBAAO,UADM;AAEb,yBAAa,UAFA;AAGb,sBAAU,IAHG;AAIb,kBAAM,UAJO;AAKb,mBAAO;AALM;AAHrB,KAhCQ,CAAZ;;AA8CA,UAAM,IAAN,CAAW,OAAX,GAAqB,KAArB,GAA6B,IAA7B,CAAmC,CAAD,IAAO;AACrC,WAAG,KAAH,GAAW,OAAO,MAAP,CAAc,MAAM,IAAN,CAAW,CAAC,CAAD,CAAX,EAAgB,CAAC,UAAD,EACnC,OADmC,EAC1B,UAD0B,EACd,WADc,CAAhB,EACgB,CADhB,CAAd,EACkC;AACrC,sBAAU;AAD2B,SADlC,CAAX;AAIA,WAAG,QAAH,GAAc,EAAE,KAAF,CAAQ,GAAG,KAAX,CAAd;AACH,KAND;;AASA,OAAG,OAAH,GAAa,MAAM;AACf,YAAI,CAAC,GAAG,QAAR,EAAkB,OAAO,KAAP;AAClB,eAAO,EAAE,cAAF,CAAiB,CAAC,GAAG,QAAJ,CAAjB,EAAgC,CAAC,GAAG,KAAJ,CAAhC,EAA4C,EAAE,OAA9C,EAAuD,MAAvD,KAAkE,CAAzE;AACH,KAHD;;AAKA,OAAG,IAAH,GAAU,MAAM;;AAEZ,mBAAW,WAAX,CAAuB,QAAvB,EAAiC,UAAjC;AACA,cAAM,QAAN,CAAe,MAAf,EAAuB,GAAG,KAA1B,EAAiC,MAAM,IAAN,CAAW,OAAX,EAAjC,EAAuD,IAAvD,GAA8D,IAA9D,CAAmE,MAAM;AACrE,uBAAW,WAAX,CAAuB,QAAvB,EAAiC,EAAjC;AACA,uBAAW,WAAX,CAAuB,QAAvB,EAAiC,SAAjC,EAA4C,EAA5C,EAAgD,IAAhD;AACH,SAHD;;AAKA,YAAI,GAAG,QAAH,CAAY,QAAZ,KAAyB,GAAG,KAAH,CAAS,QAAtC,EAAgD;AAC5C,gBAAI,KAAK,QAAL,CAAc,oGAAd,CAAJ,EAAyH;AACrH,+BAAe,GAAG,KAAH,CAAS,QAAxB;AACH;AACJ;AACJ,KAbD;;AAeA,aAAS,cAAT,CAAwB,QAAxB,EAAkC;AAC9B,cAAM,IAAN,CAAW,OAAX,GAAqB,WAArB,CAAiC,QAAjC;AACA,mBAAW,WAAX,CAAuB,QAAvB,EAAiC,UAAjC,EAA6C,EAA7C,EAAiD,IAAjD;AACA,cAAM,IAAN,CAAW,OAAX,GAAqB,IAArB,GAA4B,IAA5B,CAAiC,MAAM;AACnC,uBAAW,WAAX,CAAuB,SAAvB,EAAkC,mBAAlC,EAAuD,EAAvD,EAA2D,IAA3D;AACA,uBAAW,WAAX,CAAuB,QAAvB,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,IAAzC;AACA,qBAAS,MAAM;AACX,sBAAM,IAAN,CAAW,MAAX,GAAoB,IAApB,CAAyB,MAAM;AAC3B,yBAAK,IAAL,CAAU,SAAV,EAAqB,EAAE,iBAAiB,IAAnB,EAArB;AACH,iBAFD;AAGH,aAJD;AAKH,SARD;AASH;AAEJ,CA9FL;;;;ACzEA,IAAI,SAAS,QAAQ,2BAAR,EAAqC,gBAAlD;;AAEA,QAAQ,SAAR,GAAqB,GAAD,IAAS;AACzB,QAAI,UAAJ,CAAe,aAAf,EAA8B,OAAO,IAAP,CAA9B;AACA,QAAI,UAAJ,CAAe,UAAf,EAA2B,OAAO,IAAP,CAA3B;AACH,CAHD;;AAKA,IAAI,OACA,UAAU,MAAV,EAAkB,KAAlB,EAAyB,YAAzB,EAAuC,QAAvC,EAAiD,MAAjD,EAAyD,UAAzD,EAAqE;;AACjE,QAAI,OAAO,UAAX;AACA,QAAI,QAAQ,MAAM,IAAN,CAAW,OAAX,GAAqB,EAAjC;AACA,QAAI,KAAK,IAAT;AACA,OAAG,UAAH,GAAgB,EAAhB;;AAEA,SAAK,WAAL,CAAiB,SAAjB,EAA4B,WAA5B;AACA,UAAM,KAAN,CAAY,SAAZ,EACK,OADL,CACa,OADb,EACsB,MAAM,IAAN,CAAW,OAAX,EADtB,EAEK,IAFL,GAEY,IAFZ,CAEiB,UAAU,CAAV,EAAa;AACtB,WAAG,UAAH,GAAgB,MAAM,IAAN,CAAW,CAAX,EAAc,CAAC,aAAD,EAAgB,OAAhB,EAAyB,UAAzB,CAAd,CAAhB;AACA,aAAK,WAAL,CAAiB,SAAjB,EAA4B,EAA5B;AACA,iBAAS,MAAM,OAAO,MAAP,EAAf;AACH,KANL;;AAQA,OAAG,SAAH,GAAgB,IAAD,IAAU;AACrB,aAAK,IAAL,CAAU,cAAV,EAA0B,EAAE,IAAI,KAAK,EAAX,EAAe,OAAO,KAAtB,EAA1B;AACH,KAFD;AAGA,OAAG,KAAH,GAAW,MAAM;AACb,aAAK,IAAL,CAAU,cAAV,EAA0B,EAAE,OAAO,KAAT,EAA1B;AACH,KAFD;AAGH,CAtBL;;AAwBA,IAAI,OACA,UAAU,MAAV,EAAkB,KAAlB,EAAyB,YAAzB,EAAuC,QAAvC,EAAiD,MAAjD,EAAyD,UAAzD,EAAqE;;AACjE,QAAI,SAAS,YAAb;AACA,QAAI,OAAO,UAAX;AACA,QAAI,QAAQ,OAAO,KAAnB;;AAKA,QAAI,KAAK,IAAT;AACA,OAAG,KAAH,GAAW,EAAX;AACA,OAAG,aAAH,GAAmB,EAAnB;AACA,OAAG,MAAH,GAAY,CACR;AACI,aAAK,IADT;AAEI,cAAM,OAFV;AAGI,yBAAiB;AACb,mBAAO,YADM;AAEb,sBAAU;AAFG;AAHrB,KADQ,EASR;AACI,aAAK,aADT;AAEI,cAAM,OAFV;AAGI,yBAAiB;AACb,mBAAO,aADM;AAEb,yBAAa,qCAFA;AAGb,sBAAU;AAHG;AAHrB,KATQ,EAkBR;AACI,aAAK,OADT;AAEI,cAAM,OAFV,EAEmB,iBAAiB;AAC5B,mBAAO,OADqB;AAE5B,sBAAU;AAFkB;AAFpC,KAlBQ,CAAZ;;;AA8BA,QAAI,CAAC,KAAL,EAAY;AACR,gBAAQ,IAAR,CAAa,uBAAb;AACA,aAAK,IAAL,CAAU,UAAV;AACH,KAHD,MAGO;AACH,cAAM,IAAN,CAAW,GAAX,CAAe,KAAf,EAAsB,IAAtB,CAA4B,SAAD,IAAe;AACtC,gBAAI,OAAO,EAAX,EAAe;AACX,2BAAW,WAAX,CAAuB,SAAvB,EAAkC,WAAlC;AACA,sBAAM,KAAN,CAAY,SAAZ,EAAuB,OAAvB,CAA+B,UAA/B,EAA2C,OAAO,EAAlD,EAAsD,IAAtD,GAA6D,IAA7D,CAAkE,UAAU,CAAV,EAAa;AAC3E,uBAAG,QAAH,GAAc,EAAE,CAAF,CAAd;AACA,uBAAG,KAAH,GAAW,MAAM,IAAN,CAAW,CAAX,EAAc,CAAC,aAAD,EAAgB,OAAhB,CAAd,EAAwC,CAAxC,CAAX;AACA,uBAAG,aAAH,GAAmB,EAAE,KAAF,CAAQ,GAAG,KAAX,CAAnB;AACA,+BAAW,WAAX,CAAuB,SAAvB,EAAkC,EAAlC;AACA,6BAAS,MAAM,OAAO,MAAP,EAAf;AACH,iBAND;AAOH;AACD,eAAG,KAAH,CAAS,KAAT,GAAiB,SAAjB;AACH,SAZD;AAaH;;AAKD,WAAO,MAAP,GAAgB,MAAM;AAClB,mBAAW,WAAX,CAAuB,QAAvB,EAAiC,UAAjC;AACA,cAAM,QAAN,CAAe,SAAf,EAA0B,GAAG,KAA7B,EAAoC,GAAG,QAAvC,EAAiD,IAAjD,GAAwD,IAAxD,CAA6D,UAAU,CAAV,EAAa;AACtE,eAAG,KAAH,GAAW,MAAM,IAAN,CAAW,CAAC,CAAD,CAAX,EAAgB,CAAC,aAAD,EAAgB,OAAhB,EAAyB,OAAzB,CAAhB,EAAmD,CAAnD,CAAX;AACA,eAAG,aAAH,GAAmB,EAAE,KAAF,CAAQ,GAAG,KAAX,CAAnB;AACA,uBAAW,WAAX,CAAuB,QAAvB,EAAiC,EAAjC;AACA,qBAAS,MAAM,OAAO,MAAP,EAAf;AACH,SALD;AAMH,KARD;;AAUA,WAAO,QAAP,GAAkB,MAAM;AACpB,YAAI,OAAO,OAAP,CAAe,OAAf,CAAJ,EAA6B;AACzB,uBAAW,WAAX,CAAuB,UAAvB,EAAmC,YAAnC;AACA,kBAAM,QAAN,CAAe,SAAf,EAA0B,GAAG,KAA7B,EAAoC,GAAG,QAAvC,EAAiD,OAAjD,GAA2D,IAA3D,CAAgE,YAAY;AACxE,2BAAW,WAAX,CAAuB,UAAvB,EAAmC,EAAnC;AACA,uBAAO,aAAP;AACH,aAHD;AAIH;AACJ,KARD;;AAUA,WAAO,OAAP,GAAiB,MAAM;AACnB,eAAO,EAAE,cAAF,CAAiB,CAAC,GAAG,KAAJ,CAAjB,EAA6B,CAAC,GAAG,aAAJ,CAA7B,EAAiD,EAAE,OAAnD,EAA4D,MAA5D,KAAuE,CAA9E;AACH,KAFD;;AAIA,WAAO,cAAP,GAAwB,MAAM;AAC1B,YAAI,OAAO,OAAP,EAAJ,EAAsB;AAClB,mBAAO,QAAP;AACH,SAFD,MAEO;AACH,mBAAO,QAAP;AACH;AACJ,KAND;;AAQA,WAAO,aAAP,GAAuB,MAAM;AACzB,YAAI,OAAO,OAAP,EAAJ,EAAsB;AAClB,eAAG,KAAH,GAAW,GAAG,aAAd;AACH,SAFD,MAEO;AACH,mBAAO,EAAP,CAAU,UAAV;AACH;AACJ,KAND;AASH,CAzGL;;;AChCA,QAAQ,uBAAR",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "/* global angular */\n\nvar configureAngular = require('./configs/config-angular').configure;\nvar configureFormly = require('./configs/config-formly').configure;\n\nvar configureAppModule = require('./ctrls/app-common-ctrls').configure;\nvar configureServiceModule = require('./ctrls/service-ctrls').configure;\nvar configureConnectModule = require('./ctrls/connect-ctrls').configure;\nvar configureProfileModule = require('./ctrls/profile-ctrls').configure;\n\n//var parse = require('./srvs/parse-service').Service;\n\nvar app = angular.module('app', ['ngResource', 'ui.router', 'formly', 'formlyBootstrap', 'ui.bootstrap', 'ngMessages']);\n\nconfigureAngular(app);//configuration\nconfigureFormly(app); //configuration\n    \nconfigureAppModule(app);//controller\nconfigureProfileModule(app);//controller\nconfigureServiceModule(app);//controller\nconfigureConnectModule(app);//controller\n  \napp.service('parse', ()=>{}); //service\n    \n",
    "\nvar middlewares = require('./routes-middlewares').middlewares;\n\nexports.routesConfiguration = ($stateProvider, $urlRouterProvider) => {\n    $urlRouterProvider.otherwise('/home')\n\n\n\n    $stateProvider.state('service-edit', {\n        url: '/service/:id',\n        templateUrl: './views/service-edit.html',\n        params:{\n           owner:null\n        },\n        //onEnter: middlewares.inject(middlewares.SECURE)\n    })\n    $stateProvider.state('services', {\n        url: '/services',\n        templateUrl: './views/service-list.html',\n        onEnter: middlewares.inject(middlewares.SECURE)\n    })\n    \n    \n    $stateProvider.state('connect', {\n        url: '/connect',\n        templateUrl: './views/connect.html',\n        onEnter: middlewares.inject(middlewares.JUMP_WHEN_LOGGED)\n    })\n    \n    \n    \n    $stateProvider.state('profile', {\n        url: '/profile',\n        templateUrl: './views/profile.html',\n        onEnter: middlewares.inject(middlewares.SECURE)\n    })\n    \n    \n    \n    $stateProvider.state('user-services', {\n        url: '/myservices',\n        templateUrl: './views/user-services.html',\n        onEnter: middlewares.inject(middlewares.SECURE)\n    })\n    \n    $stateProvider.state('home', {\n        url: '/home',\n        templateUrl: './views/home.html',\n        onEnter: middlewares.inject(middlewares.SESSION)\n    })\n//    console.log('routeConfiguration');\n}\n",
    "/* global _ */\nvar routeConfiguration = require('./config-angular-routes').routesConfiguration;\n\nexports.configure = (app) => {\n    app.config(routeConfiguration);\n};\n\n//PARAMS\n//($scope, parse, $stateParams, $timeout, $state, $rootScope)=>{}\nvar injectables = ['$scope', 'parse', '$stateParams', '$timeout', '$state', '$rootScope'];\nexports.createController = (handler) => {\n    var rta = _.clone(injectables);\n    rta.push(handler);\n    return rta;\n};",
    "exports.configure = (app) => {\n    app.config(config)\n    app.run(run);\n};\nvar run = (formlyConfig, formlyValidationMessages) => {\n    formlyConfig.extras.ngModelAttrsManipulatorPreferBound = true;\n    formlyValidationMessages.addStringMessage('maxlength', 'Your input is WAAAAY too long!');\n    formlyValidationMessages.messages.pattern = function (viewValue, modelValue, scope) {\n        return viewValue + ' is invalid';\n    };\n    formlyValidationMessages.addTemplateOptionValueMessage('minlength', 'minlength', '', 'is the minimum length', 'Too short');\n};\nvar config = (formlyConfigProvider) => {\n\n\n    formlyConfigProvider.setType([\n        {\n            name: 'input',\n            templateUrl: 'input-template.html',\n            overwriteOk:true\n        },\n        {\n            name: 'checkbox',\n            templateUrl: 'checkbox-template.html',\n            overwriteOk:true\n        }\n    ]);\n    formlyConfigProvider.setWrapper([\n        {\n            template: [\n                '<div class=\"formly-template-wrapper form-group\"',\n                'ng-class=\"{\\'has-error\\': options.validation.errorExistsAndShouldBeVisible}\">',\n                '<label for=\"{{::id}}\">{{options.templateOptions.label}} {{options.templateOptions.required ? \\'*\\' : \\'\\'}}</label>',\n                '<formly-transclude></formly-transclude>',\n                '<div class=\"validation\"',\n                'ng-if=\"options.validation.errorExistsAndShouldBeVisible\"',\n                'ng-messages=\"options.formControl.$error\">',\n                '<div ng-messages-include=\"validation.html\"></div>',\n                '<div ng-message=\"{{::name}}\" ng-repeat=\"(name, message) in ::options.validation.messages\">',\n                '{{message(options.formControl.$viewValue, options.formControl.$modelValue, this)}}',\n                '</div>',\n                '</div>',\n                '</div>'\n            ].join(' ')\n        },\n        {\n            template: [\n                '<div class=\"checkbox formly-template-wrapper-for-checkboxes form-group\">',\n                '<label for=\"{{::id}}\">',\n                '<formly-transclude></formly-transclude>',\n                '</label>',\n                '</div>'\n            ].join(' '),\n            types: 'checkbox'\n        }\n    ]);\n\n};",
    "var middlewares = {\n    SECURE: ['redirectVisitorsWithoutSession', 'sessionUpdate'],\n    JUMP_WHEN_LOGGED: ['whenSessionJumpToProfile'],\n    SESSION: ['sessionUpdate'],\n    whenSessionJumpToProfile: ($state, $timeout, sparse) => {\n        if (sparse.Parse.User.current() && sparse.Parse.User.current().authenticated()) {\n            sparse.Parse.Session.current().then(() => {\n                $timeout(() => {\n                    $state.go('profile');\n                });\n            });\n        }\n    },\n    sessionUpdate: ($state, $timeout, sparse) => {\n        sparse.Parse.Session.current().fail(() => {\n            sparse.Parse.User.logOut().always(() => {\n                //if session lost, logout.\n            });\n        });\n        \n    },\n    redirectVisitorsWithoutSession: ($state, $timeout, sparse) => {\n        sparse.Parse.Session.current().fail(() => {\n            $timeout(function () {\n                $state.go('connect', { sessionExpired: true });\n            });\n        });\n    },\n    inject: (_middlewareNames) => {\n        var middleware = ($state, $timeout, parse) => {\n            _middlewareNames.forEach((k) => {\n                middlewares[k]($state, $timeout, parse);\n            });\n        }\n        return ['$state', '$timeout', 'parse', middleware];\n    }\n};\nexports.middlewares = middlewares;",
    "/* global Parse */\nvar create = require('../configs/config-angular').createController;\nexports.configure = (app) => {\n    app.controller('main', create(main));\n};\n\nvar main = \n  function($scope, parse, $stateParams, $timeout, $state, $rootScope){//injects\n    var root = $rootScope;\n\n    root.goto = (name, params) => {\n        //console.info('goto ',name,params);\n        $state.go(name, params);\n    };\n\n    root.statusLogged = () => {\n        return Parse.User.current() && Parse.User.current().authenticated();\n    }\n\n    root.state = {\n        saving: false,\n        success: '',\n        warning: ''\n    };\n\n    root.toggleState = (stateVarName, val, nextVal, timeout) => {\n        root.state[stateVarName] = val;\n        if(nextVal === undefined && timeout === undefined) return;\n        if(timeout < 500) timeout = 500;\n        $timeout(() => { root.$apply(); });\n        $timeout(() => {\n            nextVal = (nextVal == undefined) ? root.state[stateVarName] : nextVal;\n            root.state[stateVarName] = nextVal;\n            root.$apply();\n        }, timeout);\n    }\n\n    root.stateName = () => {\n        return $state.current.name;\n    };\n\n\n    root.question = (msg) => {\n        return window.confirm(msg);\n    };\n    \n    root.currentUser = ()=>{\n      return Parse.User.current()  \n    };\n\n};",
    "/* global Parse */\n/* global _ */\nvar create = require('../configs/config-angular').createController;\nexports.configure=(app)=>{\n    app.controller('connect', create(connect));\n};\nvar connect = \n    function($scope, parse, $stateParams, $timeout, $state, $rootScope){//injects\n    var root = $rootScope;\n    var vm = this;\n    vm.model = {};\n    vm.fields = [\n        {\n            key: 'email',\n            type: 'input',\n            templateOptions: {\n                label: 'Email',\n                placeholder: 'Email',\n                required: true,\n                type: 'email'\n            }\n        },\n        {\n            key: 'pass',\n            type: 'input',\n            templateOptions: {\n                label: 'Password',\n                placeholder: 'Password',\n                required: true,\n                type:'password'\n            }\n        }\n    ];\n\n    vm.disconnect=()=>{\n        Parse.User.logOut().then(function(){\n            root.goto('home');\n        });  \n    };\n\n    $scope.onLogin = () => {\n//        console.log(vm.model);\n        Parse.User.logIn(vm.model.email, vm.model.pass).then(function () {\n            $state.go('profile', {});\n        }).fail(function (a) {\n            $scope.warning = a.message;\n            console.warn('error', a);\n            $timeout(() => $scope.$apply());\n        });\n    };\n\n    $scope.onRegister = () => {\n        Parse.User.signUp(vm.model.email, vm.model.pass).then(function (a, b, c) {\n            console.info(a, b, c);\n        }).fail(function (a) {\n            $scope.warning = a.message;\n            console.warn('error', a);\n            $timeout(() => $scope.$apply());\n        });\n    };\n\n    $timeout(() => $scope.$apply(),2000);\n\n};",
    "/* global Parse */\n/* global _ */\nvar create = require('../configs/config-angular').createController;\n\nexports.configure = (app) => {\n    app.controller('profileGeneral', create(general));\n    app.controller('profileDetails', create(details));\n    app.controller('profileServices', create(services));\n};\n\n\nvar services =\n    function ($scope, parse, $stateParams, $timeout, $state, $rootScope) {//injects\n        var c = this;\n        c.active = 0;\n        c.services = [\n            {\n                description: 'Web design'\n            },\n            {\n                description: 'Programming'\n            }\n        ];\n        \n        //fetch\n        var columns = ['description', 'price'];\n        parse.Query('Service')\n            .equalTo('owner', Parse.User.current())\n            .select(columns)\n            .find().then(function (r) {\n                c.services = parse.Data(r, columns);\n                $timeout(() => $scope.$apply());\n            });\n\n        c.select = (index) => {\n            if (index.toString() === '+1') {\n                c.active++;\n            } else if (index.toString() === '-1') {\n                c.active--;\n            } else {\n                c.active = index;\n            }\n        };\n    };\n\n\nvar general =\n    function ($scope, parse, $stateParams, $timeout, $state, $rootScope) {//injects\n        \n        var c = this;\n        c.user = Parse.User.current();\n        c.model = parse.Data([c.user], ['nick'])[0];\n\n        var update = setInterval(function () {\n            var data = parse.Data([c.user], ['nick'])[0];\n\n            //console.log(c.model, data);\n\n\n            if (_.differenceWith([data], [c.model], _.isEqual).length !== 0) {\n                $rootScope.toggleState('saving', 'Saving..', '', 9999);\n                $timeout(() => $scope.$apply());\n                parse.Instance('User', c.model, c.user).save().then(function () {\n                    $timeout(() => {\n                        $rootScope.toggleState('saving', '', '', 0);\n                        $scope.$apply()\n                    }, 500);\n                });\n            }\n        }, 2000);\n        $scope.$on('$destroy', () => { clearInterval(update); });\n    };\n\n\nvar details =\n    function ($scope, parse, $stateParams, $timeout, $state, $rootScope) {//injects\n        var root = $rootScope;\n        var vm = this;\n        vm.model = {};\n        vm.fields = [\n            {\n                key: 'firstName',\n                type: 'input',\n                templateOptions: {\n                    label: 'First Name',\n                    type: 'text',\n                    required: false\n                }\n            },\n            {\n                key: 'lastName',\n                type: 'input',\n                templateOptions: {\n                    label: 'Last Name',\n                    type: 'text',\n                    required: false\n                }\n            },\n            {\n                template: \"<hr/>\"\n            },\n            {\n                key: 'email',\n                type: 'input',\n                templateOptions: {\n                    label: 'Email',\n                    type: 'email',\n                    required: true,\n                    placeholder: 'example@example.com'\n                }\n            },\n            {\n                key: 'password',\n                type: 'input',\n                templateOptions: {\n                    label: 'Password',\n                    placeholder: 'Password',\n                    required: true,\n                    type: 'password',\n                    value: '123456'\n                }\n            }\n        ];\n\n\n        Parse.User.current().fetch().then((r) => {\n            vm.model = Object.assign(parse.Data([r], ['username'\n                , 'email', 'lastName', 'firstName'])[0], {\n                    password: '123456'\n                });\n            vm.original = _.clone(vm.model);\n        });\n\n\n        vm.changed = () => {\n            if (!vm.original) return false;\n            return _.differenceWith([vm.original], [vm.model], _.isEqual).length !== 0;\n        };\n\n        vm.save = () => {\n\n            $rootScope.toggleState('saving', 'Saving..');\n            parse.Instance('User', vm.model, Parse.User.current()).save().then(() => {\n                $rootScope.toggleState('saving', '');\n                $rootScope.toggleState('saving', 'Saved !', '', 2000);\n            });\n\n            if (vm.original.password !== vm.model.password) {\n                if (root.question(\"If you change the password you will need to re-login using the new password right after press 'OK'\")) {\n                    changePassword(vm.model.password);\n                }\n            }\n        }\n\n        function changePassword(password) {\n            Parse.User.current().setPassword(password);\n            $rootScope.toggleState('saving', 'Saving..', '', 9999);\n            Parse.User.current().save().then(() => {\n                $rootScope.toggleState('success', 'Password changed!', '', 1000);\n                $rootScope.toggleState('saving', '', '', 9999);\n                $timeout(() => {\n                    Parse.User.logOut().then(() => {\n                        root.goto('connect', { passwordChanged: true });\n                    });\n                });\n            });\n        }\n\n    };",
    "/* global _ */\nvar create = require('../configs/config-angular').createController;\n\nexports.configure = (app) => {\n    app.controller('serviceEdit', create(edit));\n    app.controller('services', create(list));\n};\n\nvar list =\n    function ($scope, parse, $stateParams, $timeout, $state, $rootScope) {//injects\n        var root = $rootScope;\n        var owner = Parse.User.current().id;\n        var vm = this;\n        vm.collection = [];\n\n        root.toggleState('loading', 'Loading..');\n        parse.Query('Service')\n            .equalTo('owner', Parse.User.current())\n            .find().then(function (r) {\n                vm.collection = parse.Data(r, ['description', 'price', 'objectId']);\n                root.toggleState('loading', '');\n                $timeout(() => $scope.$apply());\n            });\n\n        vm.onItemTap = (item) => {\n            root.goto('service-edit', { id: item.id, owner: owner });\n        }\n        vm.onNew = () => {\n            root.goto('service-edit', { owner: owner });\n        };\n    };\n\nvar edit =\n    function ($scope, parse, $stateParams, $timeout, $state, $rootScope) {//injects\n        var params = $stateParams;\n        var root = $rootScope;\n        var owner = params.owner;\n\n\n\n\n        var vm = this;\n        vm.model = {};\n        vm.originalModel = {};\n        vm.fields = [\n            {\n                key: 'id',\n                type: 'input',\n                templateOptions: {\n                    label: 'Identifier',\n                    disabled: true\n                }\n            },\n            {\n                key: 'description',\n                type: 'input',\n                templateOptions: {\n                    label: 'Description',\n                    placeholder: 'Write a description of your service',\n                    required: true\n                }\n            },\n            {\n                key: 'price',\n                type: 'input', templateOptions: {\n                    label: 'Price',\n                    required: true\n                }\n            }\n        ];\n        \n        \n        \n        //fetch\n        if (!owner) {\n            console.warn('service owner unknow.');\n            root.goto('services');\n        } else {\n            parse.user.get(owner).then((ownerUser) => {\n                if (params.id) {\n                    $rootScope.toggleState('loading', 'Loading..');\n                    parse.Query('Service').equalTo('objectId', params.id).find().then(function (r) {\n                        vm.instance = r[0];\n                        vm.model = parse.Data(r, ['description', 'price'])[0];\n                        vm.originalModel = _.clone(vm.model);\n                        $rootScope.toggleState('loading', '');\n                        $timeout(() => $scope.$apply());\n                    });\n                }\n                vm.model.owner = ownerUser;\n            });\n        }\n\n\n\n\n        $scope.onSave = () => {\n            $rootScope.toggleState('saving', 'Saving..');\n            parse.Instance('Service', vm.model, vm.instance).save().then(function (r) {\n                vm.model = parse.Data([r], ['description', 'price', 'owner'])[0];\n                vm.originalModel = _.clone(vm.model);\n                $rootScope.toggleState('saving', '');\n                $timeout(() => $scope.$apply());\n            });\n        };\n\n        $scope.onDelete = () => {\n            if (window.confirm('sure?')) {\n                $rootScope.toggleState('deleting', 'Deleting..');\n                parse.Instance('Service', vm.model, vm.instance).destroy().then(function () {\n                    $rootScope.toggleState('deleting', '');\n                    $scope.onReturnClick();\n                });\n            }\n        };\n\n        $scope.unsaved = () => {\n            return _.differenceWith([vm.model], [vm.originalModel], _.isEqual).length !== 0;\n        };\n\n        $scope.getReturnLabel = () => {\n            if ($scope.unsaved()) {\n                return \"Cancel\";\n            } else {\n                return 'Return';\n            }\n        };\n\n        $scope.onReturnClick = () => {\n            if ($scope.unsaved()) {\n                vm.model = vm.originalModel;\n            } else {\n                $state.go('services');\n            }\n        };\n\n\n    };",
    "require('./angular/app.angular');"
  ]
}